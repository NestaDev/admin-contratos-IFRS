<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="monitoramento_content_tutorial" xml:space="preserve">
    <value>https://cloud3.webnesta.com/tutorial/ifrs/monitoramento/en-US</value>
  </data>
  <data name="monitoramento_grid1" xml:space="preserve">
    <value>Data Entry</value>
  </data>
  <data name="monitoramento_grid1_guide" xml:space="preserve">
    <value>Exibição dos boletos agrupados para processamento e envio ao Contas a Pagar. &lt;br/&gt;Processar: Função que é habilitada quando algum registro é selecionado, a função irá processar o envio do registro ao contas a pagar e assim efetuar o pagamento.&lt;br/&gt;Notificar: Função de alerta aos responsáveis por aprovação do processamento dos devidos pagamentos.</value>
  </data>
  <data name="monitoramento_grid2" xml:space="preserve">
    <value>Auditoria</value>
  </data>
  <data name="monitoramento_grid2_guide" xml:space="preserve">
    <value>Exibição dos boletos pendente de aprovação para habilitar o registro para processamento do Contas a Pagar.&lt;br/&gt;Aprovar: Função é habilitada após os registros serem selecionados. Apenas é possível selecionar os registros caso o usuário seja um aprovador cadastrado.</value>
  </data>
  <data name="monitoramento_guide_ini" xml:space="preserve">
    <value />
  </data>
  <data name="monitoramento_lbl2" xml:space="preserve">
    <value>Intervalo em dias</value>
  </data>
  <data name="monitoramento_lbl2_guide" xml:space="preserve">
    <value>Intervalo em dias entre os períodos selecionados. O sistema irá calcular a Data Final conforme o valor informado e a Data Inicial selecionada.</value>
  </data>
  <data name="monitoramento_lbl3" xml:space="preserve">
    <value>Data Inicial</value>
  </data>
  <data name="monitoramento_lbl3_guide" xml:space="preserve">
    <value>Selecionar primeira data de vencimento para consultar as boletas disponíveis</value>
  </data>
  <data name="monitoramento_lbl4" xml:space="preserve">
    <value>Data Final</value>
  </data>
  <data name="monitoramento_lbl4_guide" xml:space="preserve">
    <value>Selecionar última data de vencimento para consultar as boletas disponíveis</value>
  </data>
  <data name="monitoramento_lbl5" xml:space="preserve">
    <value>Situação</value>
  </data>
  <data name="monitoramento_lbl5_guide" xml:space="preserve">
    <value>Conforme o período selecionado acima, é possível exibir apenas boletos já vencidos ou ainda a vencer.</value>
  </data>
  <data name="monitoramento_right_btn1" xml:space="preserve">
    <value>Contas Pagar</value>
  </data>
  <data name="monitoramento_right_btn1_guide" xml:space="preserve">
    <value>Consultar Boletos auditados e disponíveis para que sejam enviados para o Contas a Pagar.</value>
  </data>
  <data name="monitoramento_right_btn2" xml:space="preserve">
    <value>Aprovação</value>
  </data>
  <data name="monitoramento_right_btn2_guide" xml:space="preserve">
    <value>Consultar Boletos pendentes de aprovação de valores, para que seja possível processar o devido pagamento.</value>
  </data>
  <data name="monitoramento_right_combo1_item1" xml:space="preserve">
    <value>Vencido</value>
  </data>
  <data name="monitoramento_right_combo1_item2" xml:space="preserve">
    <value>a Vencer</value>
  </data>
  <data name="monitoramento_right_titulo2" xml:space="preserve">
    <value>Selecione a Empresa</value>
  </data>
  <data name="monitoramento_tituloPag" xml:space="preserve">
    <value>Monitoramento Diário de Boletas</value>
  </data>
  <data name="monitoramento_tituloRight" xml:space="preserve">
    <value>Ações do usuário</value>
  </data>
</root>