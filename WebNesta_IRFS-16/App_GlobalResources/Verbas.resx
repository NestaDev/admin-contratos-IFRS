<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="verbas_combo1_item1" xml:space="preserve">
    <value>Select</value>
  </data>
  <data name="verbas_combo1_item2" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="verbas_combo1_item3" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="verbas_combo3_item1" xml:space="preserve">
    <value>Contracted</value>
  </data>
  <data name="verbas_combo3_item2" xml:space="preserve">
    <value>Accessory</value>
  </data>
  <data name="verbas_combo4_item1" xml:space="preserve">
    <value>Permanent</value>
  </data>
  <data name="verbas_combo4_item2" xml:space="preserve">
    <value>Eventual</value>
  </data>
  <data name="verbas_combo5_item1" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="verbas_combo5_item2" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="verbas_combo6_item1" xml:space="preserve">
    <value>Monthly</value>
  </data>
  <data name="verbas_combo6_item2" xml:space="preserve">
    <value>Bimonthly</value>
  </data>
  <data name="verbas_combo6_item3" xml:space="preserve">
    <value>Quarterly</value>
  </data>
  <data name="verbas_combo6_item4" xml:space="preserve">
    <value>Four-Monthly</value>
  </data>
  <data name="verbas_combo6_item5" xml:space="preserve">
    <value>Semester</value>
  </data>
  <data name="verbas_combo6_item6" xml:space="preserve">
    <value>Annual</value>
  </data>
  <data name="verbas_combo7_item1" xml:space="preserve">
    <value>Calculated</value>
  </data>
  <data name="verbas_combo7_item2" xml:space="preserve">
    <value>Informed</value>
  </data>
  <data name="verbas_combo8_item1" xml:space="preserve">
    <value>Sim</value>
  </data>
  <data name="verbas_combo8_item2" xml:space="preserve">
    <value>Não</value>
  </data>
  <data name="verbas_content_tutorial" xml:space="preserve">
    <value>https://cloud3.webnesta.com/tutorial/ifrs/verbas/en-US</value>
  </data>
  <data name="verbas_lbl1" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="verbas_lbl10" xml:space="preserve">
    <value>Base Calculation Months</value>
  </data>
  <data name="verbas_lbl10_guide" xml:space="preserve">
    <value>Indicative base in months for the calculation of the average tolerance for payments of this amount.</value>
  </data>
  <data name="verbas_lbl11" xml:space="preserve">
    <value>Calcula Impostos?</value>
  </data>
  <data name="verbas_lbl1_direita" xml:space="preserve">
    <value>Select Fund</value>
  </data>
  <data name="verbas_lbl1_direita_guide" xml:space="preserve">
    <value>Selecionar a Verba que deseja visualizar, alterar ou excluir.</value>
  </data>
  <data name="verbas_lbl1_guide" xml:space="preserve">
    <value>Name of the Fund, will be the name that will be available for selection and association with the contracts and in the billing operations of accounts payable.</value>
  </data>
  <data name="verbas_lbl2" xml:space="preserve">
    <value>Calculate IFRS?</value>
  </data>
  <data name="verbas_lbl2_guide" xml:space="preserve">
    <value>Select whether the Budget applies to IFRS calculation rules, information of major import for the correct accounting of contracts.</value>
  </data>
  <data name="verbas_lbl3" xml:space="preserve">
    <value>Classifier</value>
  </data>
  <data name="verbas_lbl3_guide" xml:space="preserve">
    <value>Selecting the appropriate classifier, this information can be used for filters in reports.</value>
  </data>
  <data name="verbas_lbl4" xml:space="preserve">
    <value>Fund Type</value>
  </data>
  <data name="verbas_lbl4_guide" xml:space="preserve">
    <value>Contracted: Funds that are previously noted in the contract. &lt;br/&gt; Accessory: Extra contract funds, but which are only the responsibility of the lessee (example: energy, water, etc.)</value>
  </data>
  <data name="verbas_lbl5" xml:space="preserve">
    <value>Frequency</value>
  </data>
  <data name="verbas_lbl5_guide" xml:space="preserve">
    <value>Permanent: Amounts that will be paid for the life of the contract, and will be provided in the payment flow. &lt;br/&gt; Eventual: The amount will be paid only in that event (Date) and will not be provided in the payment flow.</value>
  </data>
  <data name="verbas_lbl6" xml:space="preserve">
    <value>Tax Recovery</value>
  </data>
  <data name="verbas_lbl6_guide" xml:space="preserve">
    <value>When the property is owned by a LEGAL PERSON (COMPANY or SOCIAL ORGANIZATION) the lessee can recover taxes related to PIS and COFINS. This situation only applies in Brazil.</value>
  </data>
  <data name="verbas_lbl7" xml:space="preserve">
    <value>Interval</value>
  </data>
  <data name="verbas_lbl7_guide" xml:space="preserve">
    <value>Select which recurrence will be paid for this amount</value>
  </data>
  <data name="verbas_lbl8" xml:space="preserve">
    <value>Value Mode</value>
  </data>
  <data name="verbas_lbl8_guide" xml:space="preserve">
    <value>Calculated Amount: There is a basis for the automated calculation of the payment of the Budget. &lt;br/&gt; Amount Informed: The amount is paid according to the Lessor's billing information.</value>
  </data>
  <data name="verbas_lbl9" xml:space="preserve">
    <value>Tolerance %</value>
  </data>
  <data name="verbas_lbl9_guide" xml:space="preserve">
    <value>Percentage applied to the average amount of the Budget to determine the payment tolerance limits.</value>
  </data>
  <data name="verbas_titulo_direita" xml:space="preserve">
    <value>User Actions</value>
  </data>
  <data name="verbas_titulo_principal" xml:space="preserve">
    <value>Funds</value>
  </data>
</root>